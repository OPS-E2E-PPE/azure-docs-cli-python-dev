### YamlMime:AzureCLIGroup
uid: az_dms_project_task
name: az dms project task
extensionInformation: >-
  > [!Note]

  > This reference is part of the **dms-preview** extension for Azure CLI and requires version 2.0.43 or higher.  The extension will automatically install the first time you run an **az dms project task** command.  [Learn more](https://docs.microsoft.com/en-us/cli/azure/azure-cli-extensions-overview) about extensions.
summary: Manage tasks for a Data Migration Service instance's project.
description: ''
directCommands:
- uid: ext_dms-preview_az_dms_project_task_cancel
  name: az dms project task cancel
  summary: This command is being deprecated. Use the stop command instead.
  description: >-
    To keep a more consistent experience with Azure's portal UI use:
        az dms project task stop.
  syntax: >-
    az dms project task cancel --name
                               --project-name
                               --resource-group
                               --service-name
                               [--object-name]
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: The name of the Task. A DMS Project Task is the activity that performs migration related work. There could be multiple Tasks associated with a Project.
    description: ''
  - isRequired: true
    name: --project-name
    summary: The name of the Project. DMS Project is a logical grouping that encompasses source database connection, target database connection and a list of databases to migrate.
    description: ''
  - isRequired: true
    name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - isRequired: true
    name: --service-name
    summary: The name of the Service. DMS Service is an Azure instance that performs database migrations.
    description: ''
  optionalParameters:
  - name: --object-name
    summary: Supported by MongoDB migrations only. The qualified name of the database or collection you wish to stop. Leave blank to stop the entire migration.
    description: ''
- uid: ext_dms-preview_az_dms_project_task_create
  name: az dms project task create
  summary: Create and start a migration Task.
  description: >-
    The following task configurations are supported:
        -) source -> target :: task type
        1) SQL -> SQLDB :: OfflineMigration
        2) MySQL -> AzureDbForMySql :: OnlineMigration
        3) PostgreSQL -> AzureDbForPostgreSQL :: OnlineMigration
        4) MongoDB -> MongoDB (for migrating to Cosmos DB via their MongoDB API) :: OfflineMigration.
  syntax: >-
    az dms project task create --database-options-json
                               --name
                               --project-name
                               --resource-group
                               --service-name
                               --source-connection-json
                               --target-connection-json
                               --task-type
                               [--enable-data-integrity-validation]
                               [--enable-query-analysis-validation]
                               [--enable-schema-validation]
                               [--validate-only]
                               [--validated-task-name]
  examples:
  - summary: Create and start a SQL Task which performs no validation checks.
    syntax: "az dms project task create --database-options-json C:\\CliFiles\\databaseOptions.json -n mytask --project-name myproject -g myresourcegroup --service-name mydms --source-connection-json '{'dataSource': 'myserver', 'authentication': 'SqlAuthentication', 'encryptConnection': 'true', 'trustServerCertificate': 'true'}' --target-connection-json C:\\CliFiles\\targetConnection.json --task-type offlinemigration"
  - summary: Create and start a SQL Task which performs all validation checks.
    syntax: az dms project task create --database-options-json C:\CliFiles\databaseOptions.json -n mytask --project-name myproject -g myresourcegroup --service-name mydms --source-connection-json C:\CliFiles\sourceConnection.json --target-connection-json C:\CliFiles\targetConnection.json --enable-data-integrity-validation --enable-query-analysis-validation --enable-schema-validation --task-type offlinemigration
  requiredParameters:
  - isRequired: true
    name: --database-options-json
    summary: Database and table information. This can be either a JSON-formatted string or the location to a file containing the JSON object. See examples below for the format.
    description: >-
      For SQL we support per table migrations. To use this, specify the tables names in the 'table_map' as below. You can also set the source as read only.
        [
            {
                "name": "source database",
                "target_database_name": "target database",
                "make_source_db_read_only": false|true,
                "table_map": {
                    "schema.SourceTableName1": "schema.TargetTableName1",
                    "schema.SourceTableName2": "schema.TargetTableName2",
                    ...n
                }
            },
            ...n
        ]

      For MySQL and PostgreSQL, the format of the database options JSON object.
        [
            {
                "name": "source database",
                "target_database_name": "target database",
                // Used for manipulating the underlying migration engine.
                // Only provide if instructed to do so or if you really know what you are doing.
                "migrationSetting": {
                    "setting1": "value1",
                    ...n
                },
                // Used for manipulating the underlying migration engine.
                // Only provide if instructed to do so or if you really know what you are doing.
                "sourceSetting": {
                    "setting1": "value1",
                    ...n
                },
                // Used for manipulating the underlying migration engine.
                // Only provide if instructed to do so or if you really know what you are doing.
                "targetSetting": {
                    "setting1": "value1",
                    ...n
                },
                // Applies only for PostgreSQL
                // List tables that you want included in the migration.
                "selectedTables": [
                    "schemaName1.tableName1",
                    ...n
                ]
            },
            ...n
        ]

      For MongoDB we support per collection migrations. To use this, specify the collections inside the database object as below.
        {
            // set to zero to get the default boost during migration (recommended)
            "boostRUs": 0,
            // "OneTime" or "Continuous", only "OneTime" is currently supported
            "replication": "OneTime",
            // Set to null to use maximum resources available.
            "throttling": {
                // percentage of the CPU to try to avoid using
                "minFreeCpu": 25,
                // amount of RAM (in MBs) to try to avoid using
                "minFreeMemoryMb": 1024,
                // max number of collections to migrate at a time
                "maxParallelism": 2
            },
            "databases": {
                "database_name": {
                    // see https://docs.microsoft.com/th-th/azure/cosmos-db/request-units,     ||
                    // set to null to use default
                    // or 0 if throughput should not be provisioned at the database level
                    "targetRUs": 0,
                    "collections": {
                        "collection_name_1": {
                            // Whether the target database/collection will be deleted if exists
                            "canDelete": true,
                            // set to null if target should not be sharded
                            // or to copy the shard key from source (if exists)
                            "shardKey": null,
                            // set to null to use default (recommended)
                            "targetRUs": null
                        },
                        "collection_name_2": {
                            "canDelete": true,
                            "shardKey": {
                                "fields": [
                                    {
                                        "name": "field_name",
                                        // accepts "Forward", "Reverse", or "Hashed" but CosmosDB only accepts a single-field, hashed shard key
                                        "order": "Forward"
                                    },
                                    ...n
                                ],
                                // whether shard key is unique
                                // see https://docs.microsoft.com/azure/cosmos-db/partition-data
                                "isUnique": false
                            },
                            "targetRUs": 10000
                        },
                        ...n
                    }
                },
                ...n
            }
        }

      For Oracle to PostgreSQL, the format of the database options JSON object.
        [
            {
                // "Preserve" or "ToLower". Not valid when providing "tableMap".
                "caseManipulation": "",
                // When provided, copies all tables within this schema, preserving the casing of the source object names,
                // or using the value of "caseManipulation" if provided.
                // Not valid if providing "tableMap".
                "schemaName": "",
                // Defines custom mapping of schemas and tables. As seen, offers freedom for mapping tables to different schemas, changing schema and table names, and modifying object name casing.
                // Not valid if providing "schemaName".
                "tableMap": {
                    "SCHEMA1.TABLE1": "SCHEMA1.TABLE1",
                    "SCHEMA2.TABLE2": "SCHEMA1.TABLE2",
                    "SCHEMA2.TABLE3": "schema2.OtherTableName
                    ...n
                },
                "targetDatabaseName": "database_name",
                // Used for manipulating the underlying migration engine.
                // Only provide if instructed to do so or if you really know what you are doing.
                "migrationSetting": {
                    "setting1": "value1",
                    ...n
                },
                // Used for manipulating the underlying migration engine.
                // Only provide if instructed to do so or if you really know what you are doing.
                "sourceSetting": {
                    "setting1": "value1",
                    ...n
                },
                // Used for manipulating the underlying migration engine.
                // Only provide if instructed to do so or if you really know what you are doing.
                "targetSetting": {
                    "setting1": "value1",
                    ...n
                }
            }
        ].
  - isRequired: true
    name: --name -n
    summary: The name of the Task. A DMS Project Task is the activity that performs migration related work. There could be multiple Tasks associated with a Project.
    description: ''
  - isRequired: true
    name: --project-name
    summary: The name of the Project. DMS Project is a logical grouping that encompasses source database connection, target database connection and a list of databases to migrate.
    description: ''
  - isRequired: true
    name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - isRequired: true
    name: --service-name
    summary: The name of the Service. DMS Service is an Azure instance that performs database migrations.
    description: ''
  - isRequired: true
    name: --source-connection-json
    summary: The connection information to the source server. This can be either a JSON-formatted string or the location to a file containing the JSON object. See examples below for the format.
    description: >-
      The format of the connection JSON object for SQL connections.
        {
            "userName": "user name",    // if this is missing or null, you will be prompted
            "password": null,           // if this is missing or null (highly recommended) you will be prompted
            "dataSource": "server name[,port]",
            "authentication": "SqlAuthentication|WindowsAuthentication",
            "encryptConnection": true,      // highly recommended to leave as true
            "trustServerCertificate": false  // highly recommended to leave as false
        }

      The format of the connection JSON object for MySql connections.
        {
            "userName": "user name",    // if this is missing or null, you will be prompted
            "password": null,           // if this is missing or null (highly recommended) you will be prompted
            "serverName": "server name",
            "port": 3306                // if this is missing, it will default to 3306
        }

      The format of the connection JSON object for PostgreSQL connections.
        {
            "userName": "user name",    // if this is missing or null, you will be prompted
            "password": null,           // if this is missing or null (highly recommended) you will be prompted
            "serverName": "server name",
            "databaseName": "database name", // if this is missing, it will default to the 'postgres' database
            "port": 5432,                // if this is missing, it will default to 5432
            "encryptConnection": true,      // highly recommended to leave as true (For PostgreSQL to Azure PostgreSQL migration only)
            "trustServerCertificate": false  // highly recommended to leave as false (For PostgreSQL to Azure PostgreSQL migration only)
        }

      The format of the connection JSON object for MongoDB connections.
        {
            "userName": null,   // if this is missing or null, you will be prompted
            "password": null,   // if this is missing or null (highly recommended) you will be prompted
            "connectionString": "mongodb://hostOrIp:port"
        }

      The format of the connection JSON object for Oracle connections.
        {
            "userName": null,   // if this is missing or null, you will be prompted
            "password": null,   // if this is missing or null (highly recommended) you will be prompted
            "dataSource": "//hostOrIp:port/serviceName"   // accepts EZConnect or Tnsnames formats
        }.
  - isRequired: true
    name: --target-connection-json
    summary: The connection information to the target server. This can be either a JSON-formatted string or the location to a file containing the JSON object. See 'source-connection-json' for examples of connection formats.
    description: ''
  - isRequired: true
    name: --task-type
    summary: 'The type of data movement the task will support. The supported types are: OnlineMigration, OfflineMigration.'
    description: ''
  optionalParameters:
  - name: --enable-data-integrity-validation
    summary: (For SQL only) Whether to perform a checksum based data integrity validation between source and target for the selected database and tables.
    description: ''
  - name: --enable-query-analysis-validation
    summary: (For SQL only) Whether to perform a quick and intelligent query analysis by retrieving queries from the source database and executing them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
    description: ''
  - name: --enable-schema-validation
    summary: (For SQL only) Whether to compare the schema information between source and target.
    description: ''
  - name: --validate-only
    summary: (For MongoDB to Cosmos DB only) Whether to run validation only and NOT run migration. It is mandatory to run a 'validate only' task before attempting an actual migration. Once the validation is complete, pass the name of this 'validate only' task to a new task's 'validated task name' argument.
    description: ''
  - name: --validated-task-name
    summary: (For MongoDB to Cosmos DB only) When running a migration it is neceaary to pass in the name of a previously run 'validate only' task.
    description: ''
- uid: ext_dms-preview_az_dms_project_task_cutover
  name: az dms project task cutover
  summary: For an online migration task, complete the migration by performing a cutover.
  description: >-
    To see the result of the request, please use the 'task show' command:
        az dms project task show ... --expand command.
  syntax: >-
    az dms project task cutover --name
                                --project-name
                                --resource-group
                                --service-name
                                [--immediate]
                                [--object-name]
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: The name of the Task. A DMS Project Task is the activity that performs migration related work. There could be multiple Tasks associated with a Project.
    description: ''
  - isRequired: true
    name: --project-name
    summary: The name of the Project. DMS Project is a logical grouping that encompasses source database connection, target database connection and a list of databases to migrate.
    description: ''
  - isRequired: true
    name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - isRequired: true
    name: --service-name
    summary: The name of the Service. DMS Service is an Azure instance that performs database migrations.
    description: ''
  optionalParameters:
  - name: --immediate
    summary: For MongoDB migrations, whether to cutover immediately or to let the currently loaded events get migrated. For all other migration types, this has no effect.
    description: ''
  - name: --object-name
    summary: For MongoDB migrations, the qualified name of the database or collection you wish to cutover. Leave blank to cutover the entire migration. For all other migration types, the name of the database on the source you wish to cutover.
    description: ''
- uid: ext_dms-preview_az_dms_project_task_restart
  name: az dms project task restart
  summary: ''
  description: >-
    To see the result of the request, please use the 'task show' command:
        az dms project task show ... --expand command.
  syntax: >-
    az dms project task restart --name
                                --project-name
                                --resource-group
                                --service-name
                                [--object-name]
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: The name of the Task. A DMS Project Task is the activity that performs migration related work. There could be multiple Tasks associated with a Project.
    description: ''
  - isRequired: true
    name: --project-name
    summary: The name of the Project. DMS Project is a logical grouping that encompasses source database connection, target database connection and a list of databases to migrate.
    description: ''
  - isRequired: true
    name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - isRequired: true
    name: --service-name
    summary: The name of the Service. DMS Service is an Azure instance that performs database migrations.
    description: ''
  optionalParameters:
  - name: --object-name
    summary: The qualified name of the database or collection you wish to restart. Leave blank to restart the entire migration.
    description: ''
- uid: ext_dms-preview_az_dms_project_task_stop
  name: az dms project task stop
  summary: Stops the task, or stops migration on the specified object (MongoDB migrations only).
  description: >-
    To see the result of the request, please use the 'task show' command:
        az dms project task show ... --expand command.
  syntax: >-
    az dms project task stop --name
                             --project-name
                             --resource-group
                             --service-name
                             [--object-name]
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: The name of the Task. A DMS Project Task is the activity that performs migration related work. There could be multiple Tasks associated with a Project.
    description: ''
  - isRequired: true
    name: --project-name
    summary: The name of the Project. DMS Project is a logical grouping that encompasses source database connection, target database connection and a list of databases to migrate.
    description: ''
  - isRequired: true
    name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - isRequired: true
    name: --service-name
    summary: The name of the Service. DMS Service is an Azure instance that performs database migrations.
    description: ''
  optionalParameters:
  - name: --object-name
    summary: Supported by MongoDB migrations only. The qualified name of the database or collection you wish to stop. Leave blank to stop the entire migration.
    description: ''
commands:
- ext_dms-preview_az_dms_project_task_cancel
- ext_dms-preview_az_dms_project_task_create
- ext_dms-preview_az_dms_project_task_cutover
- ext_dms-preview_az_dms_project_task_restart
- ext_dms-preview_az_dms_project_task_stop
globalParameters:
- name: --debug
  summary: Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: Show this help message and exit.
- name: --only-show-errors
  summary: Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: json
  parameterValueGroup: json, jsonc, table, tsv
  summary: Output format.
- name: --query
  summary: JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --verbose
  summary: Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage tasks for a Data Migration Service instance's project.
